worker_processes 4;
pid /var/run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
	# Basic Settings
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_names_hash_bucket_size 64;
	server_tokens off;
	server_name_in_redirect off;

	include mime.types;
	default_type application/octet-stream;

	# Logging
	access_log off;
	error_log stderr;

	# Prevent nginx from adding compression; this interacts badly with Sandstorm
	# WebSession due to https://github.com/sandstorm-io/sandstorm/issues/289
	gzip off;

	# Trust the sandstorm-http-bridge's X-Forwarded-Proto.
	map $http_x_forwarded_proto $fe_https {
		default "";
		https on;
	}

	server {
		listen 8000 default_server;
		listen [::]:8000 default_server ipv6only=on;

		# Allow arbitrarily large bodies - Sandstorm can handle them, and requests
		# are authenticated already, so there's no reason for apps to add additional
		# limits by default.
		client_max_body_size 0;

		server_name localhost;
		# root /opt/app/;
		root /var/www/;

		location / {
			index index.php;
			try_files $uri $uri/ =404;
		}

		gzip on;
		gzip_disable "msie6";
		gzip_min_length 1100;
			  gzip_types text/xml text/css image/x-icon image/bmp application/json
			   text/javascript application/x-javascript application/javascript
			   application/pdf application/postscript
			   application/rtf application/vnd.ms-powerpoint
			   application/msword application/vnd.ms-excel
			   application/vnd.wap.xhtml+xml;

	# Example with brotli
	#                    brotli on;
	#                    brotli_types text/xml text/css image/x-icon image/bmp application/json
	#                   text/javascript application/x-javascript application/javascript
	#                   application/pdf application/postscript
	#                   application/rtf application/vnd.ms-powerpoint
	#                   application/msword application/vnd.ms-excel
	#                   application/vnd.wap.xhtml+xml;

		# If file is an asset, set expires and break
		location ~* \.(ico|css|js|gif|jpe?g|png|otf|eot|svg|ttf|woff|woff2)(\?[0-9]+)?$ {
			expires max;
			break;
		}

		#Allow acces to some specific assets
		location ~* ^/(robots\.txt) {
		    expires max;
		    break;
		}

		# canonicalize codeigniter url end points
		# if your default controller is something other than "welcome" you should change the following
		if ($request_uri ~* ^(/leaves(/index)?|/index(.php)?)/?$)
		{
			rewrite ^(.*)$ / permanent;
		}
	 
		# removes trailing "index" from all controllers
		if ($request_uri ~* index/?$)
		{
			rewrite ^/(.*)/index/?$ /$1 permanent;
		}
	 
		# removes trailing slashes (prevents SEO duplicate content issues)
		if (!-d $request_filename)
		{
			rewrite ^/(.+)/$ /$1 permanent;
		}
	 
		# removes access to "system" folder, also allows a "System.php" controller
		if ($request_uri ~* ^/system)
		{
			rewrite ^/(.*)$ /index.php?/$1 last;
			break;
		}
	 
		# unless the request is for a valid file (image, js, css, etc.), send to bootstrap
		if (!-e $request_filename)
		{
			rewrite ^/(.*)$ /index.php?/$1 last;
			break;
		}

		# catch all
		error_page 404 /index.php;


		location ~ \.php$ {
			fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;
			fastcgi_index index.php;
			fastcgi_split_path_info ^(.+\.php)(/.+)$;
			fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param  QUERY_STRING       $query_string;
			fastcgi_param  REQUEST_METHOD     $request_method;
			fastcgi_param  CONTENT_TYPE       $content_type;
			fastcgi_param  CONTENT_LENGTH     $content_length;
			
			fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
			fastcgi_param  REQUEST_URI        $request_uri;
			fastcgi_param  DOCUMENT_URI       $document_uri;
			fastcgi_param  DOCUMENT_ROOT      $document_root;
			fastcgi_param  SERVER_PROTOCOL    $server_protocol;
			fastcgi_param  HTTPS              $fe_https if_not_empty;
			
			fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
			fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;
			
			fastcgi_param  REMOTE_ADDR        $remote_addr;
			fastcgi_param  REMOTE_PORT        $remote_port;
			fastcgi_param  SERVER_ADDR        $server_addr;
			fastcgi_param  SERVER_PORT        $server_port;
			fastcgi_param  SERVER_NAME        $server_name;
			
			# PHP only, required if PHP was built with --enable-force-cgi-redirect
			fastcgi_param  REDIRECT_STATUS    200;
		}
	}
}
